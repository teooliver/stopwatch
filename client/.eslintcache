[{"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/index.tsx":"1","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/reportWebVitals.ts":"2","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/App.tsx":"3","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/context/TaskContext.tsx":"4","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/Stopwatch.tsx":"5","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/helper/Timer.ts":"6","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/EditableInput.tsx":"7","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/Controls.tsx":"8","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/icons/ThreeDotsVertical.tsx":"9","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/icons/PlayCircle.tsx":"10","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/icons/StopCircle.tsx":"11","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/icons/XCircle.tsx":"12","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/utils/api-client.ts":"13","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/EventsTable/EventsTable.tsx":"14","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/EventsTable/EventRow.tsx":"15"},{"size":784,"mtime":1609455989227,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1609100358517,"results":"18","hashOfConfig":"17"},{"size":275,"mtime":1609504425525,"results":"19","hashOfConfig":"17"},{"size":467,"mtime":1609456564602,"results":"20","hashOfConfig":"17"},{"size":1220,"mtime":1609458881434,"results":"21","hashOfConfig":"17"},{"size":535,"mtime":1609114172666,"results":"22","hashOfConfig":"17"},{"size":887,"mtime":1609203603786,"results":"23","hashOfConfig":"17"},{"size":2243,"mtime":1609461938109,"results":"24","hashOfConfig":"17"},{"size":583,"mtime":1609192843809,"results":"25","hashOfConfig":"17"},{"size":633,"mtime":1609250329440,"results":"26","hashOfConfig":"17"},{"size":623,"mtime":1609250459113,"results":"27","hashOfConfig":"17"},{"size":706,"mtime":1609250565860,"results":"28","hashOfConfig":"17"},{"size":1106,"mtime":1609456870726,"results":"29","hashOfConfig":"17"},{"size":833,"mtime":1609504603425,"results":"30","hashOfConfig":"17"},{"size":1345,"mtime":1609505079917,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"pvcvrh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/index.tsx",[],["65","66"],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/reportWebVitals.ts",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/App.tsx",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/context/TaskContext.tsx",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/Stopwatch.tsx",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/helper/Timer.ts",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/EditableInput.tsx",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/Controls.tsx",["67","68"],"import React, { FC, useContext, useEffect, useState } from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { TaskContext } from \"../context/TaskContext\";\nimport PlayCircle from \"../icons/PlayCircle\";\nimport StopCircle from \"../icons/StopCircle\";\nimport XCircle from \"../icons/XCircle\";\nimport { createTask } from \"../utils/api-client\";\n\ninterface ControlsProps {\n  setTimeInSeconds: Function;\n  eventName: string;\n  timeInSeconds: number;\n  setEventName: Function;\n}\n\nconst Controls: FC<ControlsProps> = ({\n  setTimeInSeconds,\n  eventName,\n  timeInSeconds,\n  setEventName,\n}) => {\n  const [intervalId, setIntervalId] = useState<number>(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const { task, setTask } = useContext(TaskContext);\n  const queryClient = useQueryClient();\n\n  useEffect(() => {\n    setTask!({\n      ...task,\n      name: eventName,\n    });\n  }, [eventName]);\n\n  useEffect(() => {\n    setTask!({\n      ...task,\n      timeInSeconds: timeInSeconds,\n    });\n  }, [timeInSeconds]);\n\n  const createTaskMutation = useMutation(createTask, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries(\"tasks\");\n    },\n  });\n\n  const handlePlayButton = () => {\n    let interval: any = setInterval(() => {\n      setTimeInSeconds((previousState: number) => previousState + 1);\n    }, 1000);\n    setIntervalId(interval);\n    setIsPlaying(true);\n    setTask!({ ...task, initialTime: new Date() });\n  };\n  const handleStopButton = () => {\n    clearInterval(intervalId);\n    setIsPlaying(false);\n    // @ts-ignore\n    createTaskMutation.mutate(task);\n  };\n  const handleResetButton = () => {\n    clearInterval(intervalId);\n    setTimeInSeconds(0);\n    setIsPlaying(false);\n    setEventName(\"\");\n  };\n\n  return (\n    <div className='Controls'>\n      {isPlaying ? (\n        <button onClick={handleStopButton}>\n          <i>\n            <StopCircle />\n          </i>\n        </button>\n      ) : (\n        <button onClick={handlePlayButton}>\n          <i>\n            <PlayCircle />\n          </i>\n        </button>\n      )}\n      <button onClick={handleResetButton}>\n        <i>\n          <XCircle />\n        </i>\n      </button>\n    </div>\n  );\n};\n\nexport default Controls;\n","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/icons/ThreeDotsVertical.tsx",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/icons/PlayCircle.tsx",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/icons/StopCircle.tsx",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/icons/XCircle.tsx",[],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/utils/api-client.ts",["69"],"import { ITask } from \"../interfaces/task\";\n\nexport const API_URL = \"http://localhost:5000/tasks\";\n\nexport const fetchTasks = async () => {\n  const res = await fetch(API_URL).then((res) => res.json());\n  return res as ITask[];\n};\n\nexport const createTask = async (newTask: ITask) => {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(newTask),\n  }).then((res) => res.json());\n\n  return res as ITask[];\n};\n\nexport const updateTask = async (task: ITask) => {\n  const res = await fetch(`${API_URL}/${task._id}`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(task),\n  }).then((res) => res.json());\n\n  return res as ITask;\n};\n\nexport const deleteTask = async (id: string) => {\n  const res = await fetch(`${API_URL}/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n};\n","/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/EventsTable/EventsTable.tsx",["70","71","72","73","74"],"/Users/teoliver/Documents/Web_Projects_Docs/Code/stopwatch/client/src/components/EventsTable/EventRow.tsx",["75","76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":32,"column":6,"nodeType":"84","endLine":32,"endColumn":17,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"83","line":39,"column":6,"nodeType":"84","endLine":39,"endColumn":21,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":37,"column":9,"nodeType":"89","messageId":"90","endLine":37,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":25},{"ruleId":"87","severity":1,"message":"92","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":24},{"ruleId":"87","severity":1,"message":"93","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":21},{"ruleId":"87","severity":1,"message":"94","line":4,"column":33,"nodeType":"89","messageId":"90","endLine":4,"endColumn":47},{"ruleId":"87","severity":1,"message":"95","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":20},{"ruleId":"87","severity":1,"message":"96","line":7,"column":3,"nodeType":"89","messageId":"90","endLine":7,"endColumn":12},{"ruleId":"87","severity":1,"message":"97","line":8,"column":3,"nodeType":"89","messageId":"90","endLine":8,"endColumn":14},{"ruleId":"87","severity":1,"message":"98","line":9,"column":3,"nodeType":"89","messageId":"90","endLine":9,"endColumn":11},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setTask' and 'task'. Either include them or remove the dependency array.","ArrayExpression",["101"],["102"],"@typescript-eslint/no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'ThreeDotsVertical' is defined but never used.","'calculateTimer' is defined but never used.","'useMutation' is defined but never used.","'useQueryClient' is defined but never used.","'deleteTask' is defined but never used.","'MenuItems' is defined but never used.","'MenuPopover' is defined but never used.","'MenuLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [eventName, setTask, task]",{"range":"107","text":"108"},"Update the dependencies array to be: [setTask, task, timeInSeconds]",{"range":"109","text":"110"},[900,911],"[eventName, setTask, task]",[1014,1029],"[setTask, task, timeInSeconds]"]